// Package {{.PackageName}} 自动生成模板 {{.StructName}}Service
// @description <TODO description class purpose>
// @author {{.Author}}
// @File: {{.FileName}}
// @version 1.0.0
// @create {{.DateTime}}
package {{.PackageName}}

import (
    "errors"
    "{{.ImportPath}}/common"
    "{{.ImportPath}}/{{.CodePath}}/{{.ModuleName}}/{{.FileName}}/model"
    "{{.ImportPath}}/{{.CodePath}}/{{.ModuleName}}/{{.FileName}}/service/view"
)
var {{.ObjectName}}Dao = model.{{.StructName}}DaoApp
var viewUtils = view.{{.StructName}}ViewUtilsApp

type {{.StructName}}Service struct {}

// Create 创建{{.StructName}}记录
// Author {{.Author}}
func (service *{{.StructName}}Service) Create({{.ObjectName}}View *view.{{.StructName}}View) error {
    if err, {{.ObjectName}} := viewUtils.View2Data({{.ObjectName}}View); err != nil {
        return err
    } else {
        return {{.ObjectName}}Dao.Create(*{{.ObjectName}})
    }
}

// DeleteByIds 批量删除{{.StructName}}记录
// Author {{.Author}}
func (service *{{.StructName}}Service) DeleteByIds(ids []string) (err error) {
    err = {{.ObjectName}}Dao.DeleteByIds(ids)
    return err
}

// Update 更新{{.StructName}}记录
// Author {{.Author}}
func (service *{{.StructName}}Service) Update(id string, {{.ObjectName}}View *view.{{.StructName}}View) error {
    {{.ObjectName}}View.Id = id
    if err, {{.ObjectName}} := viewUtils.View2Data({{.ObjectName}}View); err != nil {
        return err
    } else {
        return {{.ObjectName}}Dao.Update(*{{.ObjectName}})
    }
}

// Get 根据id获取{{.StructName}}记录
// Author {{.Author}}
func (service *{{.StructName}}Service) Get(id string) (err error, {{.ObjectName}}View *view.{{.StructName}}View) {
    err1, {{.ObjectName}} := {{.ObjectName}}Dao.Get(id)
    if err1 != nil {
        return err1, nil
    }
    err, {{.ObjectName}}View = viewUtils.Data2View({{.ObjectName}})
    return
}


// Page 分页获取{{.StructName}}记录
// Author {{.Author}}
func (service *{{.StructName}}Service) Page(pageInfo *view.{{.StructName}}PageView) (err error, res *common.PageInfo) {
    err, param, page := viewUtils.Page2Data(pageInfo)
    if err != nil {
        return err, nil
    }
    err1, datas, total := {{.ObjectName}}Dao.Page(param, page)
    if err1 != nil {
        return err1, res
    }
    if err2, viewList := viewUtils.Data2ViewList(datas); err2 != nil {
        return err2, res
    } else {
        res = &common.PageInfo{
            Total: total,
            Rows:  viewList,
        }
        return err, res
    }

}

// List 获取{{.StructName}}列表
// Author {{.Author}}
func (service *{{.StructName}}Service) List(v *view.{{.StructName}}View) (err error, views []*view.{{.StructName}}View) {
    err, data := viewUtils.View2Data(v)
    if err != nil {
        return err, nil
    }
    var datas []*model.{{.StructName}}
    if err, datas = {{.ObjectName}}Dao.List(data); err != nil {
        return err, nil
    } else {
        err, views = viewUtils.Data2ViewList(datas)
        return
    }
}